Qx<x>:=PolynomialRing(Rationals());

X:=SmallModularCurve(59);

cusps:=&cat[CuspPlaces(X,59,d) : d in Divisors(59)];

assert &and[Degree(P) eq 1 : P in cusps];
assert #NonCuspidalQRationalPoints(X,59) eq 0;

Y:=HyperellipticCurve(-2*x^11+5*x^10-7*x^9+10*x^7-16*x^6+10*x^5-x^4-6*x^3+5*x^2-x-2,-x^6-x^4-x^2);

tf,phi:=IsIsomorphic(X,Y);
assert tf;

cusps:={Pushforward(phi,c) : c in cusps};

ptsY:= [ Y![1 , 1 , 0], Y![1 , 0 , 0]];
assert cusps eq {Place(p) : p in ptsY};

p0:=ptsY[1];

J:=Jacobian(Y);
ptsJ:=[ p-p0 : p in ptsY   ];
assert &and[29*Q eq J!0 : Q in ptsJ];
assert BadPrimes(J) eq [59];

J3:=BaseChange(J,GF(3));
B,mu:=AbelianGroup(J3);

A:=FreeAbelianGroup(2);
eps:=hom<A->B | [ (J3!Q)@@mu : Q in ptsJ  ] >;
C:=Image(eps);

Q1:=ptsJ[2];
mu1:=(J3!Q1)@@mu;

cuspGp:=AbelianGroup([29]);
delta:=hom<cuspGp->C | [mu1]>;
assert #Kernel(delta) eq 1;
assert Image(delta) eq C;

cuspGpElts:={a*Q1 : a in [0..22]};
assert #cuspGpElts eq 23;

D1:=Place(ptsY[2])-Place(ptsY[1]);

infdiv:=3*Place(ptsY[1]);

deg3:=[a*D1+infdiv : a in [0..22]];

assert #deg3 eq 23;
assert &and[Degree(D) eq 3 : D in deg3];

assert &and[Dimension(RiemannRochSpace(D)) in [0,1,2] : D in deg3];

deg3:=[ D : D in deg3 | Dimension(RiemannRochSpace(D)) eq 1];

assert #deg3 eq 3;

deg3new:=[];
for D in deg3 do
L,mu:=RiemannRochSpace(D);
assert Dimension(L) eq 1;
D1:=D+Divisor(mu(L.1));
assert IsEffective(D1);
decomp:=Decomposition(D1);
if #decomp eq 1 and decomp[1,2] eq 1 then
Append(~deg3new,decomp[1,1]);
end if;
end for;

assert #deg3new eq 1;
// thus there is 1 irreducible divisors of degree 3

for D in deg3new do
K:=ResidueClassField(D);
assert IsNumberField(K);
assert Degree(K) eq 3;
assert IsTotallyReal(K) eq false;
assert Discriminant(K) lt 0;
end for;

// thus there are no irreducible degree 3 divisors
// defined over a totally real cubic field
